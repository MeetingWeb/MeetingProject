<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Process annotations on registered beans like @Autowired... -->
	<context:annotation-config />
	<context:component-scan base-package="meeting.team.controller" />
	  
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<default-servlet-handler />

	<view-controller path="/index" view-name="security/index" />

	<!-- <context:component-scan base-package="meeting.team.controller" /> -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="text/html; charset=UTF-8" />
	</beans:bean>

	<beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />

	<beans:bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<beans:property name="basename" value="msg/messages" />
	</beans:bean>

	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<beans:bean id="simpleChatHandler" class="meeting.team.controller.ChatController" />
	<websocket:handlers>
		<websocket:mapping path="/chat" handler="simpleChatHandler" />
		<websocket:handshake-interceptors>
			<beans:bean class="meeting.team.interceptor.HandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
	<interceptors>
		<interceptor>
			<mapping path="/reviews/**" />
			<mapping path="/notice/**" />
			<mapping path="/web/addForm"/>
			<mapping path="/web/chatForm"/>
			<beans:bean class="meeting.team.interceptor.LoginInterceptor" />
		</interceptor>
	</interceptors>

		
	<!-- 
	        <beans:bean id="mailSender" class ="org.springframework.mail.javamail.JavaMailSenderImpl" >
	    <beans:property name="host" value="smtp.gmail.com" />
	    <beans:property name="port" value="25" />
	    <beans:property name="username" value="aorder1234@gmail.com" />
	    <beans:property name="password" value="dudrb0951" />
	    <beans:property name="defaultEncoding" value="utf-8"/>
	    <beans:property name="javaMailProperties">
	    <beans:props>
	        <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
	        <beans:prop key="mail.transport.protocol">smtp</beans:prop>
			<beans:prop key="mail.smtp.auth">true</beans:prop>
			<beans:prop key="mail.debug">true</beans:prop>
	    </beans:props>
	    </beans:property>
	</beans:bean>
	 -->

</beans:beans>